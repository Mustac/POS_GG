@using POS_GG_APP
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<MudThemeProvider IsDarkMode="true"/>
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar>
        <div class="d-flex justify-content-between w-100">
            <div>
                <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
                Gate Gourmet
            </div>
            <div>
                <MudIconButton Icon="@Icons.Material.Filled.VerifiedUser" Color="Color.Inherit"></MudIconButton>
                <MudIconButton Icon="@Icons.Material.Filled.Settings" Color="Color.Inherit"></MudIconButton>
                <MudTooltip Text="Logout">
                    <MudIconButton Href="/logout" Icon="@Icons.Material.Filled.Logout" Color="Color.Error"></MudIconButton>
                </MudTooltip>
            </div>
        </div>
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen">
        <MudNavMenu>
            <MudNavLink Href="/" Match="NavLinkMatch.All">Dashboard</MudNavLink>
            <MudNavLink Href="/servers" Match="NavLinkMatch.Prefix">Servers</MudNavLink>
                <MudNavLink Href="/admin/user-manager" Match="NavLinkMatch.Prefix">User List</MudNavLink>
            <MudNavLink Href="/about" Match="NavLinkMatch.Prefix">About</MudNavLink>
        </MudNavMenu>
    </MudDrawer>
    <MudMainContent>
        <div class="p-4">
            @Body
        </div>
    </MudMainContent>
</MudLayout>

@code {
    protected override async Task OnInitializedAsync()
    {
        var userState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var role = userState.User.Claims.FirstOrDefault(x => x.Type == "http://schemas.microsoft.com/ws/2008/06/identity/claims/role")?.Value;

        if ((userState is null || userState.User is null || userState.User.Identity is null) || !userState.User.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo("/login");
        }

        bool isAdmin = role == Roles.Administrator;
        bool isManager = role == Roles.Manager;


        if (!isAdmin && !isManager)
            NavigationManager.NavigateTo("/");

    }

    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}