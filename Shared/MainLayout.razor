@using POS_GG_APP
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<MudThemeProvider IsDarkMode="true"/>
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar>
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        My Application
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen">
        <MudNavMenu>
            <MudNavLink Href="/" Match="NavLinkMatch.All">Dashboard</MudNavLink>
            <MudNavLink Href="/servers" Match="NavLinkMatch.Prefix">Servers</MudNavLink>
                <MudNavLink Href="/admin/user-manager" Match="NavLinkMatch.Prefix">User List</MudNavLink>
            <MudNavLink Href="/about" Match="NavLinkMatch.Prefix">About</MudNavLink>
        </MudNavMenu>
    </MudDrawer>
    <MudMainContent>
        <div class="p-4">
            @Body
        </div>
    </MudMainContent>
</MudLayout>

@code {
    protected override async Task OnInitializedAsync()
    {
        var userState = await AuthenticationStateProvider.GetAuthenticationStateAsync();

        if(userState is null || userState.User is null || userState.User.Identity is null)
        {
            NavigationManager.NavigateTo("/");
        }

        if(!userState.User.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo("/");
        }

        if (!userState.User.IsInRole(Roles.Administrator) || !userState.User.IsInRole(Roles.Manager))
        {
            NavigationManager.NavigateTo("/");
        }

    }

    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}