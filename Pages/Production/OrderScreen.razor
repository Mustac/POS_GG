@page "/production/order"
@using POS_OS_GG.Models.ViewModels
@layout ProductionLayout
@inject IJSRuntime JSRuntime
@inject ProductService ProductService

<div class="autocoplete-filed-position">
    <MudPaper Class="p-4 pt-1" Outlined="true">
        <MudAutocomplete T="ProductInfo" id="autocomplete-input" @bind-Value="selectedProduct" Label="Products" SearchFunc="@Search"
                         ResetValueOnEmptyText="false"
                         CoerceText="false" CoerceValue="false"
                         AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Surface"
                         ToStringFunc="@(product => product.Name)" />
    </MudPaper>
</div>

@code {
    private ProductInfo selectedProduct;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("focusElementOnKeyPress");
        }
    }

    private async Task<IEnumerable<ProductInfo>> Search(string value)
    {
        value = value.ToLower();

        var result = await ProductService.GetProductsAsync(value);

        if(!result.Data.Any<ProductInfo>(x=>x.Name.ToLower() == value))
        {
            var registerProductResult = await ProductService.RegisterProductAsync(value);

            if (registerProductResult.IsSuccess)
            {
                    // add to order this product
            }
        }

        if(!result.IsSuccess)
        {
            return new HashSet<ProductInfo>();
        }

        return result.Data;
    }
}
